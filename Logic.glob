DIGEST e468d6bead50d6bfe232de4c05b88c31
FLF.Logic
R176:182 LF.Tactics <> <> lib
R975:977 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1008:1010 Coq.Init.Datatypes <> nat ind
binder 1002:1002 <> n:1
binder 1004:1004 <> m:2
R1018:1020 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1014:1016 LF.Basics <> ::nat_scope:x_'+'_x not
R1013:1013 LF.Logic <> n:1 var
R1017:1017 LF.Logic <> m:2 var
R1022:1024 LF.Basics <> ::nat_scope:x_'+'_x not
R1021:1021 LF.Logic <> m:2 var
R1025:1025 LF.Logic <> n:1 var
R1233:1235 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1254:1256 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1285:1287 Coq.Init.Datatypes <> nat ind
binder 1281:1281 <> n:3
R1291:1293 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1290:1290 LF.Logic <> n:3 var
prf 1620:1632 <> plus_2_2_is_4
R1643:1645 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1639:1641 LF.Basics <> ::nat_scope:x_'+'_x not
def 1837:1846 <> plus_claim
R1863:1865 Coq.Init.Logic <> ::type_scope:x_'='_x not
R1859:1861 LF.Basics <> ::nat_scope:x_'+'_x not
R1875:1884 LF.Logic <> plus_claim def
prf 2044:2061 <> plus_claim_is_true
R2067:2076 LF.Logic <> plus_claim def
def 2354:2361 <> is_three
R2368:2370 Coq.Init.Datatypes <> nat ind
binder 2364:2364 <> n:4
R2386:2388 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2385:2385 LF.Logic <> n:4 var
R2412:2415 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2409:2411 Coq.Init.Datatypes <> nat ind
R2398:2405 LF.Logic <> is_three def
def 2614:2622 <> injective
binder 2625:2625 <> A:5
binder 2627:2627 <> B:6
R2636:2639 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2635:2635 LF.Logic <> A:5 var
R2640:2640 LF.Logic <> B:6 var
binder 2631:2631 <> f:7
R2661:2661 LF.Logic <> A:5 var
binder 2655:2655 <> x:8
binder 2657:2657 <> y:9
R2673:2676 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R2667:2669 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2664:2664 LF.Logic <> f:7 var
R2666:2666 LF.Logic <> x:8 var
R2670:2670 LF.Logic <> f:7 var
R2672:2672 LF.Logic <> y:9 var
R2678:2680 Coq.Init.Logic <> ::type_scope:x_'='_x not
R2677:2677 LF.Logic <> x:8 var
R2681:2681 LF.Logic <> y:9 var
prf 2691:2698 <> succ_inj
R2702:2710 LF.Logic <> injective def
R2712:2712 Coq.Init.Datatypes <> S constr
binder 3058:3058 <> A:10
R3069:3072 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3068:3068 LF.Logic <> A:10 var
R3074:3077 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R3073:3073 LF.Logic <> A:10 var
R3046:3047 Coq.Init.Logic <> eq ind
def 3606:3616 <> and_example
R3629:3632 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R3625:3627 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3621:3623 LF.Basics <> ::nat_scope:x_'+'_x not
R3638:3640 Coq.Init.Logic <> ::type_scope:x_'='_x not
R3634:3636 LF.Basics <> ::nat_scope:x_'*'_x not
prf 3998:4006 <> and_intro
binder 4017:4017 <> A:11
binder 4019:4019 <> B:12
R4030:4033 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4029:4029 LF.Logic <> A:11 var
R4035:4038 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4034:4034 LF.Logic <> B:12 var
R4040:4043 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R4039:4039 LF.Logic <> A:11 var
R4044:4044 LF.Logic <> B:12 var
def 4312:4323 <> and_example'
R4336:4339 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R4332:4334 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4328:4330 LF.Basics <> ::nat_scope:x_'+'_x not
R4345:4347 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4341:4343 LF.Basics <> ::nat_scope:x_'*'_x not
R4366:4374 LF.Logic <> and_intro thm
R4366:4374 LF.Logic <> and_intro thm
def 4510:4521 <> and_exercise
R4540:4542 Coq.Init.Datatypes <> nat ind
binder 4534:4534 <> n:13
binder 4536:4536 <> m:14
R4554:4557 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R4550:4552 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4546:4548 LF.Basics <> ::nat_scope:x_'+'_x not
R4545:4545 LF.Logic <> n:13 var
R4549:4549 LF.Logic <> m:14 var
R4563:4566 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R4559:4561 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4558:4558 LF.Logic <> n:13 var
R4568:4570 Coq.Init.Logic <> ::type_scope:x_'='_x not
R4567:4567 LF.Logic <> m:14 var
prf 5169:5180 <> and_example2
R5199:5201 Coq.Init.Datatypes <> nat ind
binder 5193:5193 <> n:15
binder 5195:5195 <> m:16
R5218:5221 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5209:5212 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5205:5207 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5204:5204 LF.Logic <> n:15 var
R5214:5216 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5213:5213 LF.Logic <> m:16 var
R5227:5229 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5223:5225 LF.Basics <> ::nat_scope:x_'+'_x not
R5222:5222 LF.Logic <> n:15 var
R5226:5226 LF.Logic <> m:16 var
prf 5492:5504 <> and_example2'
R5523:5525 Coq.Init.Datatypes <> nat ind
binder 5517:5517 <> n:17
binder 5519:5519 <> m:18
R5542:5545 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5533:5536 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R5529:5531 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5528:5528 LF.Logic <> n:17 var
R5538:5540 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5537:5537 LF.Logic <> m:18 var
R5551:5553 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5547:5549 LF.Basics <> ::nat_scope:x_'+'_x not
R5546:5546 LF.Logic <> n:17 var
R5550:5550 LF.Logic <> m:18 var
prf 5809:5822 <> and_example2''
R5841:5843 Coq.Init.Datatypes <> nat ind
binder 5835:5835 <> n:19
binder 5837:5837 <> m:20
R5851:5854 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5847:5849 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5846:5846 LF.Logic <> n:19 var
R5860:5863 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R5856:5858 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5855:5855 LF.Logic <> m:20 var
R5869:5871 Coq.Init.Logic <> ::type_scope:x_'='_x not
R5865:5867 LF.Basics <> ::nat_scope:x_'+'_x not
R5864:5864 LF.Logic <> n:19 var
R5868:5868 LF.Logic <> m:20 var
prf 6202:6213 <> and_example3
R6232:6234 Coq.Init.Datatypes <> nat ind
binder 6226:6226 <> n:21
binder 6228:6228 <> m:22
R6246:6249 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6242:6244 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6238:6240 LF.Basics <> ::nat_scope:x_'+'_x not
R6237:6237 LF.Logic <> n:21 var
R6241:6241 LF.Logic <> m:22 var
R6255:6257 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6251:6253 LF.Basics <> ::nat_scope:x_'*'_x not
R6250:6250 LF.Logic <> n:21 var
R6254:6254 LF.Logic <> m:22 var
R6328:6331 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6324:6326 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6333:6335 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6328:6331 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6324:6326 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6333:6335 Coq.Init.Logic <> ::type_scope:x_'='_x not
R6350:6361 LF.Logic <> and_exercise ex
R6350:6361 LF.Logic <> and_exercise ex
prf 6751:6755 <> proj1
binder 6766:6766 <> P:23
binder 6768:6768 <> Q:24
R6786:6789 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6781:6784 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6780:6780 LF.Logic <> P:23 var
R6785:6785 LF.Logic <> Q:24 var
R6790:6790 LF.Logic <> P:23 var
prf 6925:6929 <> proj2
binder 6940:6940 <> P:25
binder 6942:6942 <> Q:26
R6960:6963 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R6955:6958 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R6954:6954 LF.Logic <> P:25 var
R6959:6959 LF.Logic <> Q:26 var
R6964:6964 LF.Logic <> Q:26 var
prf 7236:7245 <> and_commut
binder 7256:7256 <> P:27
binder 7258:7258 <> Q:28
R7276:7279 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7271:7274 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7270:7270 LF.Logic <> P:27 var
R7275:7275 LF.Logic <> Q:28 var
R7281:7284 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7280:7280 LF.Logic <> Q:28 var
R7285:7285 LF.Logic <> P:27 var
prf 7651:7659 <> and_assoc
binder 7670:7670 <> P:29
binder 7672:7672 <> Q:30
binder 7674:7674 <> R:31
R7699:7702 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7687:7691 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7698:7698 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7686:7686 LF.Logic <> P:29 var
R7693:7696 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7692:7692 LF.Logic <> Q:30 var
R7697:7697 LF.Logic <> R:31 var
R7703:7703 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7710:7714 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7705:7708 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R7704:7704 LF.Logic <> P:29 var
R7709:7709 LF.Logic <> Q:30 var
R7715:7715 LF.Logic <> R:31 var
R8005:8008 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8013:8016 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R7995:7997 Coq.Init.Logic <> and ind
prf 8560:8568 <> eq_mult_0
R8587:8589 Coq.Init.Datatypes <> nat ind
binder 8581:8581 <> n:32
binder 8583:8583 <> m:33
R8606:8609 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R8597:8600 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R8593:8595 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8592:8592 LF.Logic <> n:32 var
R8602:8604 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8601:8601 LF.Logic <> m:33 var
R8615:8617 Coq.Init.Logic <> ::type_scope:x_'='_x not
R8611:8613 LF.Basics <> ::nat_scope:x_'*'_x not
R8610:8610 LF.Logic <> n:32 var
R8614:8614 LF.Logic <> m:33 var
R8834:8841 Coq.Init.Peano <> mult_n_O thm
R8834:8841 Coq.Init.Peano <> mult_n_O thm
R8834:8841 Coq.Init.Peano <> mult_n_O thm
prf 9190:9199 <> or_intro_l
binder 9210:9210 <> A:34
binder 9212:9212 <> B:35
R9223:9226 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9222:9222 LF.Logic <> A:34 var
R9228:9231 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R9227:9227 LF.Logic <> A:34 var
R9232:9232 LF.Logic <> B:35 var
prf 9367:9378 <> zero_or_succ
R9395:9397 Coq.Init.Datatypes <> nat ind
binder 9391:9391 <> n:36
R9405:9408 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R9401:9403 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9400:9400 LF.Logic <> n:36 var
R9410:9412 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9409:9409 LF.Logic <> n:36 var
R9413:9413 Coq.Init.Datatypes <> S constr
R9416:9419 Coq.Init.Peano <> pred abbrev
R9421:9421 LF.Logic <> n:36 var
prf 9581:9589 <> mult_eq_0
binder 9602:9602 <> n:37
binder 9604:9604 <> m:38
R9616:9619 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9612:9614 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9608:9610 LF.Basics <> ::nat_scope:x_'*'_x not
R9607:9607 LF.Logic <> n:37 var
R9611:9611 LF.Logic <> m:38 var
R9625:9628 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R9621:9623 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9620:9620 LF.Logic <> n:37 var
R9630:9632 Coq.Init.Logic <> ::type_scope:x_'='_x not
R9629:9629 LF.Logic <> m:38 var
prf 9829:9837 <> or_commut
binder 9848:9848 <> P:39
binder 9850:9850 <> Q:40
R9868:9872 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R9863:9866 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R9862:9862 LF.Logic <> P:39 var
R9867:9867 LF.Logic <> Q:40 var
R9874:9877 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R9873:9873 LF.Logic <> Q:40 var
R9878:9878 LF.Logic <> P:39 var
mod 10877:10881 <> MyNot
def 10896:10898 MyNot not
binder 10901:10901 <> P:41
R10913:10916 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10912:10912 LF.Logic <> P:41 var
R10917:10921 Coq.Init.Logic <> False ind
R10944:10946 LF.Logic MyNot not def
not 10934:10934 MyNot ::type_scope:'~'_x
R10982:10985 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R10972:10974 LF.Logic MyNot not def
R10997:11001 LF.Logic MyNot <> mod
prf 11221:11238 <> ex_falso_quodlibet
binder 11250:11250 <> P:42
R11266:11269 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11261:11265 Coq.Init.Logic <> False ind
R11270:11270 LF.Logic <> P:42 var
prf 11684:11702 <> not_implies_our_not
binder 11714:11714 <> P:43
R11728:11732 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11756:11756 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11725:11726 Coq.Init.Logic <> ::type_scope:'~'_x not
R11727:11727 LF.Logic <> P:43 var
binder 11741:11741 <> Q:44
R11751:11754 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R11750:11750 LF.Logic <> P:43 var
R11755:11755 LF.Logic <> Q:44 var
prf 12055:12066 <> zero_not_one
R12071:12074 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R12294:12296 Coq.Init.Logic <> not def
prf 12837:12845 <> not_False
R12851:12852 Coq.Init.Logic <> ::type_scope:'~'_x not
R12853:12857 Coq.Init.Logic <> False ind
R12876:12878 Coq.Init.Logic <> not def
prf 12917:12946 <> contradiction_implies_anything
binder 12957:12957 <> P:45
binder 12959:12959 <> Q:46
R12971:12971 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12979:12983 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R12973:12976 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R12972:12972 LF.Logic <> P:45 var
R12977:12977 Coq.Init.Logic <> ::type_scope:'~'_x not
R12978:12978 LF.Logic <> P:45 var
R12984:12984 LF.Logic <> Q:46 var
R13048:13050 Coq.Init.Logic <> not def
prf 13107:13116 <> double_neg
binder 13127:13127 <> P:47
R13140:13143 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13139:13139 LF.Logic <> P:47 var
R13144:13144 Coq.Init.Logic <> ::type_scope:'~'_x not
R13145:13145 Coq.Init.Logic <> ::type_scope:'~'_x not
R13146:13146 LF.Logic <> P:47 var
R13201:13203 Coq.Init.Logic <> not def
def 13493:13523 <> manual_grade_for_double_neg_inf
R13527:13532 Coq.Init.Datatypes <> option ind
R13538:13538 LF.Poly <> ::type_scope:x_'*'_x not
R13535:13537 Coq.Init.Datatypes <> nat ind
R13539:13544 Coq.Strings.String <> string ind
R13550:13553 Coq.Init.Datatypes <> None constr
prf 13643:13656 <> contrapositive
binder 13668:13668 <> P:48
binder 13670:13670 <> Q:49
R13683:13683 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13690:13695 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13704:13704 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13685:13688 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13684:13684 LF.Logic <> P:48 var
R13689:13689 LF.Logic <> Q:49 var
R13698:13701 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R13696:13696 Coq.Init.Logic <> ::type_scope:'~'_x not
R13697:13697 LF.Logic <> Q:49 var
R13702:13702 Coq.Init.Logic <> ::type_scope:'~'_x not
R13703:13703 LF.Logic <> P:48 var
R13735:13737 Coq.Init.Logic <> not def
prf 13894:13916 <> not_both_true_and_false
binder 13927:13927 <> P:50
R13939:13941 Coq.Init.Logic <> ::type_scope:'~'_x not
R13949:13949 Coq.Init.Logic <> ::type_scope:'~'_x not
R13943:13946 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R13942:13942 LF.Logic <> P:50 var
R13947:13947 Coq.Init.Logic <> ::type_scope:'~'_x not
R13948:13948 LF.Logic <> P:50 var
R13978:13980 Coq.Init.Logic <> not def
def 14245:14277 <> manual_grade_for_informal_not_PNP
R14281:14286 Coq.Init.Datatypes <> option ind
R14292:14292 LF.Poly <> ::type_scope:x_'*'_x not
R14289:14291 Coq.Init.Datatypes <> nat ind
R14293:14298 Coq.Strings.String <> string ind
R14304:14307 Coq.Init.Datatypes <> None constr
prf 14797:14813 <> not_true_is_false
R14828:14831 LF.Basics <> bool ind
binder 14824:14824 <> b:51
R14845:14848 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R14837:14840 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R14836:14836 LF.Logic <> b:51 var
R14841:14844 LF.Basics <> true constr
R14850:14852 Coq.Init.Logic <> ::type_scope:x_'='_x not
R14849:14849 LF.Logic <> b:51 var
R14853:14857 LF.Basics <> false constr
R14932:14934 Coq.Init.Logic <> not def
R14952:14969 LF.Logic <> ex_falso_quodlibet thm
R14952:14969 LF.Logic <> ex_falso_quodlibet thm
prf 15162:15179 <> not_true_is_false'
R15194:15197 LF.Basics <> bool ind
binder 15190:15190 <> b:52
R15211:15214 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R15203:15206 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R15202:15202 LF.Logic <> b:52 var
R15207:15210 LF.Basics <> true constr
R15216:15218 Coq.Init.Logic <> ::type_scope:x_'='_x not
R15215:15215 LF.Logic <> b:52 var
R15219:15223 LF.Basics <> false constr
R15325:15327 Coq.Init.Logic <> not def
prf 15700:15711 <> True_is_true
R15715:15718 Coq.Init.Logic <> True ind
R15734:15734 Coq.Init.Logic <> I constr
R15734:15734 Coq.Init.Logic <> I constr
mod 16324:16328 <> MyIff
def 16343:16345 MyIff iff
binder 16348:16348 <> P:53
binder 16350:16350 <> Q:54
R16363:16363 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R16370:16375 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R16382:16382 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R16365:16368 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16364:16364 LF.Logic <> P:53 var
R16369:16369 LF.Logic <> Q:54 var
R16377:16380 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16376:16376 LF.Logic <> Q:54 var
R16381:16381 LF.Logic <> P:53 var
R16409:16411 LF.Logic MyIff iff def
not 16395:16395 MyIff ::type_scope:x_'<->'_x
R16513:16517 LF.Logic MyIff <> mod
prf 16529:16535 <> iff_sym
binder 16546:16546 <> P:55
binder 16548:16548 <> Q:56
R16560:16560 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16568:16573 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16581:16581 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R16562:16566 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R16561:16561 LF.Logic <> P:55 var
R16567:16567 LF.Logic <> Q:56 var
R16575:16579 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R16574:16574 LF.Logic <> Q:56 var
R16580:16580 LF.Logic <> P:55 var
prf 16709:16726 <> not_true_iff_false
binder 16737:16737 <> b:57
R16751:16755 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R16743:16746 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R16742:16742 LF.Logic <> b:57 var
R16747:16750 LF.Basics <> true constr
R16757:16759 Coq.Init.Logic <> ::type_scope:x_'='_x not
R16756:16756 LF.Logic <> b:57 var
R16760:16764 LF.Basics <> false constr
R16836:16852 LF.Logic <> not_true_is_false thm
R16836:16852 LF.Logic <> not_true_is_false thm
prf 17118:17125 <> iff_refl
binder 17136:17136 <> P:58
R17149:17153 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R17148:17148 LF.Logic <> P:58 var
R17154:17154 LF.Logic <> P:58 var
prf 17243:17251 <> iff_trans
binder 17262:17262 <> P:59
binder 17264:17264 <> Q:60
binder 17266:17266 <> R:61
R17278:17278 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17286:17290 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17280:17284 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R17279:17279 LF.Logic <> P:59 var
R17285:17285 LF.Logic <> Q:60 var
R17291:17291 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17299:17304 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17312:17312 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R17293:17297 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R17292:17292 LF.Logic <> Q:60 var
R17298:17298 LF.Logic <> R:61 var
R17306:17310 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R17305:17305 LF.Logic <> P:59 var
R17311:17311 LF.Logic <> R:61 var
prf 17565:17587 <> or_distributes_over_and
binder 17598:17598 <> P:62
binder 17600:17600 <> Q:63
binder 17602:17602 <> R:64
R17627:17631 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R17615:17619 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R17626:17626 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R17614:17614 LF.Logic <> P:62 var
R17621:17624 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R17620:17620 LF.Logic <> Q:63 var
R17625:17625 LF.Logic <> R:64 var
R17632:17632 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R17639:17644 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R17651:17651 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R17634:17637 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R17633:17633 LF.Logic <> P:62 var
R17638:17638 LF.Logic <> Q:63 var
R17646:17649 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R17645:17645 LF.Logic <> P:62 var
R17650:17650 LF.Logic <> R:64 var
R18435:18448 Coq.Setoids.Setoid <> <> lib
prf 19276:19281 <> mult_0
binder 19292:19292 <> n:65
binder 19294:19294 <> m:66
R19306:19310 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R19302:19304 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19298:19300 LF.Basics <> ::nat_scope:x_'*'_x not
R19297:19297 LF.Logic <> n:65 var
R19301:19301 LF.Logic <> m:66 var
R19316:19319 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R19312:19314 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19311:19311 LF.Logic <> n:65 var
R19321:19323 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19320:19320 LF.Logic <> m:66 var
R19353:19361 LF.Logic <> mult_eq_0 thm
R19353:19361 LF.Logic <> mult_eq_0 thm
R19374:19382 LF.Logic <> eq_mult_0 thm
R19374:19382 LF.Logic <> eq_mult_0 thm
prf 19397:19404 <> or_assoc
binder 19417:19417 <> P:67
binder 19419:19419 <> Q:68
binder 19421:19421 <> R:69
R19444:19448 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R19432:19436 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R19443:19443 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R19431:19431 LF.Logic <> P:67 var
R19438:19441 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R19437:19437 LF.Logic <> Q:68 var
R19442:19442 LF.Logic <> R:69 var
R19449:19449 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R19456:19460 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R19451:19454 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R19450:19450 LF.Logic <> P:67 var
R19455:19455 LF.Logic <> Q:68 var
R19461:19461 LF.Logic <> R:69 var
prf 19910:19917 <> mult_0_3
binder 19930:19930 <> n:70
binder 19932:19932 <> m:71
binder 19934:19934 <> p:72
R19950:19954 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R19946:19948 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19942:19944 LF.Basics <> ::nat_scope:x_'*'_x not
R19938:19940 LF.Basics <> ::nat_scope:x_'*'_x not
R19937:19937 LF.Logic <> n:70 var
R19941:19941 LF.Logic <> m:71 var
R19945:19945 LF.Logic <> p:72 var
R19960:19963 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R19956:19958 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19955:19955 LF.Logic <> n:70 var
R19969:19972 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R19965:19967 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19964:19964 LF.Logic <> m:71 var
R19974:19976 Coq.Init.Logic <> ::type_scope:x_'='_x not
R19973:19973 LF.Logic <> p:72 var
R20013:20018 LF.Logic <> mult_0 thm
R20013:20018 LF.Logic <> mult_0 thm
R20013:20018 LF.Logic <> mult_0 thm
R20029:20034 LF.Logic <> mult_0 thm
R20029:20034 LF.Logic <> mult_0 thm
R20029:20034 LF.Logic <> mult_0 thm
R20045:20052 LF.Logic <> or_assoc thm
R20045:20052 LF.Logic <> or_assoc thm
R20045:20052 LF.Logic <> or_assoc thm
prf 20236:20252 <> apply_iff_example
R20271:20273 Coq.Init.Datatypes <> nat ind
binder 20265:20265 <> n:73
binder 20267:20267 <> m:74
R20285:20288 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R20281:20283 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20277:20279 LF.Basics <> ::nat_scope:x_'*'_x not
R20276:20276 LF.Logic <> n:73 var
R20280:20280 LF.Logic <> m:74 var
R20294:20297 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R20290:20292 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20289:20289 LF.Logic <> n:73 var
R20299:20301 Coq.Init.Logic <> ::type_scope:x_'='_x not
R20298:20298 LF.Logic <> m:74 var
R20334:20339 LF.Logic <> mult_0 thm
R20334:20339 LF.Logic <> mult_0 thm
def 21138:21141 <> even
binder 21143:21143 <> x:75
R21148:21154 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R21162:21163 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R21159:21161 Coq.Init.Datatypes <> nat ind
binder 21155:21155 <> n:76
R21165:21167 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21164:21164 LF.Logic <> x:75 var
R21168:21173 LF.Induction <> double def
R21175:21175 LF.Logic <> n:76 var
prf 21185:21196 <> four_is_even
R21200:21203 LF.Logic <> even def
R21224:21227 LF.Logic <> even def
prf 21452:21467 <> exists_example_2
binder 21478:21478 <> n:77
R21483:21483 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21503:21510 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21530:21530 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21484:21490 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R21492:21493 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 21491:21491 <> m:78
R21495:21497 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21494:21494 LF.Logic <> n:77 var
R21499:21501 LF.Basics <> ::nat_scope:x_'+'_x not
R21502:21502 LF.Logic <> m:78 var
R21511:21517 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R21519:21520 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 21518:21518 <> o:79
R21522:21524 Coq.Init.Logic <> ::type_scope:x_'='_x not
R21521:21521 LF.Logic <> n:77 var
R21526:21528 LF.Basics <> ::nat_scope:x_'+'_x not
R21529:21529 LF.Logic <> o:79 var
R21639:21641 LF.Basics <> ::nat_scope:x_'+'_x not
R21639:21641 LF.Basics <> ::nat_scope:x_'+'_x not
prf 21903:21917 <> dist_not_exists
binder 21929:21929 <> X:80
R21943:21946 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21942:21942 LF.Logic <> X:80 var
binder 21938:21938 <> P:81
R21956:21956 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R21970:21974 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 21964:21964 <> x:82
R21967:21967 LF.Logic <> P:81 var
R21969:21969 LF.Logic <> x:82 var
R21975:21977 Coq.Init.Logic <> ::type_scope:'~'_x not
R21993:21993 Coq.Init.Logic <> ::type_scope:'~'_x not
R21978:21984 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R21986:21987 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 21985:21985 <> x:83
R21988:21989 Coq.Init.Logic <> ::type_scope:'~'_x not
R21990:21990 LF.Logic <> P:81 var
R21992:21992 LF.Logic <> x:83 var
prf 22201:22214 <> dist_exists_or
binder 22226:22226 <> X:84
R22242:22245 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R22241:22241 LF.Logic <> X:84 var
binder 22235:22235 <> P:85
binder 22237:22237 <> Q:86
R22255:22255 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R22276:22281 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R22256:22262 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R22264:22265 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 22263:22263 <> x:87
R22269:22272 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R22266:22266 LF.Logic <> P:85 var
R22268:22268 LF.Logic <> x:87 var
R22273:22273 LF.Logic <> Q:86 var
R22275:22275 LF.Logic <> x:87 var
R22282:22282 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R22296:22301 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R22315:22315 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R22283:22289 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R22291:22292 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 22290:22290 <> x:88
R22293:22293 LF.Logic <> P:85 var
R22295:22295 LF.Logic <> x:88 var
R22302:22308 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R22310:22311 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 22309:22309 <> x:89
R22312:22312 LF.Logic <> Q:86 var
R22314:22314 LF.Logic <> x:89 var
def 23377:23378 <> In
binder 23381:23381 <> A:90
R23396:23396 LF.Logic <> A:90 var
binder 23392:23392 <> x:91
R23404:23407 LF.Poly <> list ind
R23409:23409 LF.Logic <> A:90 var
binder 23400:23400 <> l:92
R23430:23430 LF.Logic <> l:92 var
R23441:23442 LF.Poly <> :::'['_']' not
R23447:23451 Coq.Init.Logic <> False ind
R23459:23462 LF.Poly <> :::x_'::'_x not
R23475:23478 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R23471:23473 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23474:23474 LF.Logic <> x:91 var
R23479:23480 LF.Logic <> In:93 def
R23482:23482 LF.Logic <> x:91 var
def 23599:23610 <> In_example_1
R23614:23615 LF.Logic <> In def
R23619:23619 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23621:23622 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23624:23625 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23627:23628 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23630:23631 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23633:23633 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
def 23730:23741 <> In_example_2
binder 23754:23754 <> n:95
R23768:23773 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R23757:23758 LF.Logic <> In def
R23762:23762 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23764:23765 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23767:23767 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R23760:23760 LF.Logic <> n:95 var
R23774:23780 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R23783:23784 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 23781:23782 <> n':96
R23786:23788 Coq.Init.Logic <> ::type_scope:x_'='_x not
R23785:23785 LF.Logic <> n:95 var
R23790:23792 LF.Basics <> ::nat_scope:x_'*'_x not
R23793:23794 LF.Logic <> n':96 var
prf 24236:24241 <> In_map
binder 24255:24255 <> A:97
binder 24257:24257 <> B:98
R24273:24276 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24272:24272 LF.Logic <> A:97 var
R24277:24277 LF.Logic <> B:98 var
binder 24268:24268 <> f:99
R24285:24288 LF.Poly <> list ind
R24290:24290 LF.Logic <> A:97 var
binder 24281:24281 <> l:100
R24298:24298 LF.Logic <> A:97 var
binder 24294:24294 <> x:101
R24312:24319 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R24306:24307 LF.Logic <> In def
R24311:24311 LF.Logic <> l:100 var
R24309:24309 LF.Logic <> x:101 var
R24320:24321 LF.Logic <> In def
R24330:24332 LF.Poly <> map def
R24336:24336 LF.Logic <> l:100 var
R24334:24334 LF.Logic <> f:99 var
R24324:24324 LF.Logic <> f:99 var
R24326:24326 LF.Logic <> x:101 var
prf 25023:25032 <> In_map_iff
binder 25046:25046 <> A:102
binder 25048:25048 <> B:103
R25064:25067 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R25063:25063 LF.Logic <> A:102 var
R25068:25068 LF.Logic <> B:103 var
binder 25059:25059 <> f:104
R25076:25079 LF.Poly <> list ind
R25081:25081 LF.Logic <> A:102 var
binder 25072:25072 <> l:105
R25089:25089 LF.Logic <> B:103 var
binder 25085:25085 <> y:106
R25111:25119 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R25097:25098 LF.Logic <> In def
R25103:25105 LF.Poly <> map def
R25109:25109 LF.Logic <> l:105 var
R25107:25107 LF.Logic <> f:104 var
R25100:25100 LF.Logic <> y:106 var
R25120:25126 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R25128:25129 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 25127:25127 <> x:107
R25137:25140 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R25133:25135 Coq.Init.Logic <> ::type_scope:x_'='_x not
R25130:25130 LF.Logic <> f:104 var
R25132:25132 LF.Logic <> x:107 var
R25136:25136 LF.Logic <> y:106 var
R25141:25142 LF.Logic <> In def
R25146:25146 LF.Logic <> l:105 var
R25144:25144 LF.Logic <> x:107 var
R25547:25552 LF.Logic <> In_map thm
R25547:25552 LF.Logic <> In_map thm
prf 25646:25655 <> In_app_iff
binder 25666:25666 <> A:108
binder 25668:25668 <> l:109
binder 25670:25671 <> l':110
R25676:25676 LF.Logic <> A:108 var
binder 25674:25674 <> a:111
R25694:25698 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R25682:25683 LF.Logic <> In def
R25689:25690 LF.Poly <> :::x_'++'_x not
R25688:25688 LF.Logic <> l:109 var
R25691:25692 LF.Logic <> l':110 var
R25685:25685 LF.Logic <> a:111 var
R25705:25708 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R25699:25700 LF.Logic <> In def
R25704:25704 LF.Logic <> l:109 var
R25702:25702 LF.Logic <> a:111 var
R25709:25710 LF.Logic <> In def
R25714:25715 LF.Logic <> l':110 var
R25712:25712 LF.Logic <> a:111 var
def 26783:26785 <> All
binder 26788:26788 <> T:112
R26804:26807 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26803:26803 LF.Logic <> T:112 var
binder 26799:26799 <> P:113
R26819:26822 LF.Poly <> list ind
R26824:26824 LF.Logic <> T:112 var
binder 26815:26815 <> l:114
R26845:26845 LF.Logic <> l:114 var
R26856:26857 LF.Poly <> :::'['_']' not
R26862:26865 Coq.Init.Logic <> True ind
R26873:26876 LF.Poly <> :::x_'::'_x not
R26887:26890 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R26883:26883 LF.Logic <> P:113 var
R26891:26893 LF.Logic <> All:115 def
R26895:26895 LF.Logic <> P:113 var
prf 26914:26919 <> All_In
binder 26932:26932 <> T:117
R26940:26943 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26939:26939 LF.Logic <> T:117 var
binder 26935:26935 <> P:118
R26955:26958 LF.Poly <> list ind
R26960:26960 LF.Logic <> T:117 var
binder 26951:26951 <> l:119
R26968:26968 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R26992:27001 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
binder 26976:26976 <> x:120
R26985:26988 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R26979:26980 LF.Logic <> In def
R26984:26984 LF.Logic <> l:119 var
R26982:26982 LF.Logic <> x:120 var
R26989:26989 LF.Logic <> P:118 var
R26991:26991 LF.Logic <> x:120 var
R27002:27004 LF.Logic <> All def
R27008:27008 LF.Logic <> l:119 var
R27006:27006 LF.Logic <> P:118 var
R27104:27104 Coq.Init.Logic <> I constr
R27104:27104 Coq.Init.Logic <> I constr
def 27720:27735 <> combine_odd_even
R27754:27757 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27751:27753 Coq.Init.Datatypes <> nat ind
binder 27738:27741 <> Podd:121
binder 27743:27747 <> Peven:122
R27769:27772 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27766:27768 Coq.Init.Datatypes <> nat ind
R27788:27790 Coq.Init.Datatypes <> nat ind
binder 27785:27785 <> n:123
R27803:27806 LF.Basics <> oddb def
R27808:27808 LF.Logic <> n:123 var
R27839:27843 LF.Logic <> Peven:122 var
R27845:27845 LF.Logic <> n:123 var
R27821:27824 LF.Logic <> Podd:121 var
R27826:27826 LF.Logic <> n:123 var
prf 27920:27941 <> combine_odd_even_intro
R27971:27974 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R27968:27970 Coq.Init.Datatypes <> nat ind
binder 27955:27958 <> Podd:124
binder 27960:27964 <> Peven:125
R27986:27988 Coq.Init.Datatypes <> nat ind
binder 27982:27982 <> n:126
R27996:27996 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28020:28028 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28010:28013 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28003:28005 Coq.Init.Logic <> ::type_scope:x_'='_x not
R27997:28000 LF.Basics <> oddb def
R28002:28002 LF.Logic <> n:126 var
R28006:28009 LF.Basics <> true constr
R28014:28017 LF.Logic <> Podd:124 var
R28019:28019 LF.Logic <> n:126 var
R28029:28029 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28055:28063 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28044:28047 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28036:28038 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28030:28033 LF.Basics <> oddb def
R28035:28035 LF.Logic <> n:126 var
R28039:28043 LF.Basics <> false constr
R28048:28052 LF.Logic <> Peven:125 var
R28054:28054 LF.Logic <> n:126 var
R28064:28079 LF.Logic <> combine_odd_even def
R28081:28084 LF.Logic <> Podd:124 var
R28086:28090 LF.Logic <> Peven:125 var
R28092:28092 LF.Logic <> n:126 var
R28150:28165 LF.Logic <> combine_odd_even def
R28180:28183 LF.Basics <> oddb def
R28180:28183 LF.Basics <> oddb def
prf 28263:28287 <> combine_odd_even_elim_odd
R28317:28320 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28314:28316 Coq.Init.Datatypes <> nat ind
binder 28301:28304 <> Podd:127
binder 28306:28310 <> Peven:128
R28332:28334 Coq.Init.Datatypes <> nat ind
binder 28328:28328 <> n:129
R28371:28378 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28342:28357 LF.Logic <> combine_odd_even def
R28359:28362 LF.Logic <> Podd:127 var
R28364:28368 LF.Logic <> Peven:128 var
R28370:28370 LF.Logic <> n:129 var
R28392:28399 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28385:28387 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28379:28382 LF.Basics <> oddb def
R28384:28384 LF.Logic <> n:129 var
R28388:28391 LF.Basics <> true constr
R28400:28403 LF.Logic <> Podd:127 var
R28405:28405 LF.Logic <> n:129 var
R28447:28462 LF.Logic <> combine_odd_even def
R28477:28480 LF.Basics <> oddb def
R28477:28480 LF.Basics <> oddb def
prf 28569:28594 <> combine_odd_even_elim_even
R28624:28627 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28621:28623 Coq.Init.Datatypes <> nat ind
binder 28608:28611 <> Podd:130
binder 28613:28617 <> Peven:131
R28639:28641 Coq.Init.Datatypes <> nat ind
binder 28635:28635 <> n:132
R28678:28685 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28649:28664 LF.Logic <> combine_odd_even def
R28666:28669 LF.Logic <> Podd:130 var
R28671:28675 LF.Logic <> Peven:131 var
R28677:28677 LF.Logic <> n:132 var
R28700:28707 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R28692:28694 Coq.Init.Logic <> ::type_scope:x_'='_x not
R28686:28689 LF.Basics <> oddb def
R28691:28691 LF.Logic <> n:132 var
R28695:28699 LF.Basics <> false constr
R28708:28712 LF.Logic <> Peven:131 var
R28714:28714 LF.Logic <> n:132 var
R28756:28771 LF.Logic <> combine_odd_even def
R28786:28789 LF.Basics <> oddb def
R28786:28789 LF.Basics <> oddb def
R29513:29515 Coq.Init.Datatypes <> nat ind
binder 29507:29507 <> n:133
binder 29509:29509 <> m:134
R29523:29525 Coq.Init.Logic <> ::type_scope:x_'='_x not
R29519:29521 LF.Basics <> ::nat_scope:x_'+'_x not
R29518:29518 LF.Logic <> n:133 var
R29522:29522 LF.Logic <> m:134 var
R29527:29529 LF.Basics <> ::nat_scope:x_'+'_x not
R29526:29526 LF.Logic <> m:134 var
R29530:29530 LF.Logic <> n:133 var
R29488:29496 LF.Induction <> plus_comm prfax
prf 30777:30786 <> plus_comm3
binder 30799:30799 <> x:135
binder 30801:30801 <> y:136
binder 30803:30803 <> z:137
R30817:30819 Coq.Init.Logic <> ::type_scope:x_'='_x not
R30807:30810 LF.Basics <> ::nat_scope:x_'+'_x not
R30816:30816 LF.Basics <> ::nat_scope:x_'+'_x not
R30806:30806 LF.Logic <> x:135 var
R30812:30814 LF.Basics <> ::nat_scope:x_'+'_x not
R30811:30811 LF.Logic <> y:136 var
R30815:30815 LF.Logic <> z:137 var
R30820:30820 LF.Basics <> ::nat_scope:x_'+'_x not
R30826:30829 LF.Basics <> ::nat_scope:x_'+'_x not
R30822:30824 LF.Basics <> ::nat_scope:x_'+'_x not
R30821:30821 LF.Logic <> z:137 var
R30825:30825 LF.Logic <> y:136 var
R30830:30830 LF.Logic <> x:135 var
R31064:31072 LF.Induction <> plus_comm prfax
R31064:31072 LF.Induction <> plus_comm prfax
R31064:31072 LF.Induction <> plus_comm prfax
R31085:31093 LF.Induction <> plus_comm prfax
R31085:31093 LF.Induction <> plus_comm prfax
R31085:31093 LF.Induction <> plus_comm prfax
prf 31363:31378 <> plus_comm3_take2
binder 31391:31391 <> x:138
binder 31393:31393 <> y:139
binder 31395:31395 <> z:140
R31409:31411 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31399:31402 LF.Basics <> ::nat_scope:x_'+'_x not
R31408:31408 LF.Basics <> ::nat_scope:x_'+'_x not
R31398:31398 LF.Logic <> x:138 var
R31404:31406 LF.Basics <> ::nat_scope:x_'+'_x not
R31403:31403 LF.Logic <> y:139 var
R31407:31407 LF.Logic <> z:140 var
R31412:31412 LF.Basics <> ::nat_scope:x_'+'_x not
R31418:31421 LF.Basics <> ::nat_scope:x_'+'_x not
R31414:31416 LF.Basics <> ::nat_scope:x_'+'_x not
R31413:31413 LF.Logic <> z:140 var
R31417:31417 LF.Logic <> y:139 var
R31422:31422 LF.Logic <> x:138 var
R31458:31466 LF.Induction <> plus_comm prfax
R31458:31466 LF.Induction <> plus_comm prfax
R31458:31466 LF.Induction <> plus_comm prfax
R31488:31490 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31484:31486 LF.Basics <> ::nat_scope:x_'+'_x not
R31492:31494 LF.Basics <> ::nat_scope:x_'+'_x not
R31488:31490 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31484:31486 LF.Basics <> ::nat_scope:x_'+'_x not
R31492:31494 LF.Basics <> ::nat_scope:x_'+'_x not
R31511:31519 LF.Induction <> plus_comm prfax
R31511:31519 LF.Induction <> plus_comm prfax
R31511:31519 LF.Induction <> plus_comm prfax
prf 31751:31766 <> plus_comm3_take3
binder 31779:31779 <> x:141
binder 31781:31781 <> y:142
binder 31783:31783 <> z:143
R31797:31799 Coq.Init.Logic <> ::type_scope:x_'='_x not
R31787:31790 LF.Basics <> ::nat_scope:x_'+'_x not
R31796:31796 LF.Basics <> ::nat_scope:x_'+'_x not
R31786:31786 LF.Logic <> x:141 var
R31792:31794 LF.Basics <> ::nat_scope:x_'+'_x not
R31791:31791 LF.Logic <> y:142 var
R31795:31795 LF.Logic <> z:143 var
R31800:31800 LF.Basics <> ::nat_scope:x_'+'_x not
R31806:31809 LF.Basics <> ::nat_scope:x_'+'_x not
R31802:31804 LF.Basics <> ::nat_scope:x_'+'_x not
R31801:31801 LF.Logic <> z:143 var
R31805:31805 LF.Logic <> y:142 var
R31810:31810 LF.Logic <> x:141 var
R31846:31854 LF.Induction <> plus_comm prfax
R31846:31854 LF.Induction <> plus_comm prfax
R31846:31854 LF.Induction <> plus_comm prfax
R31868:31876 LF.Induction <> plus_comm prfax
R31868:31876 LF.Induction <> plus_comm prfax
R31868:31876 LF.Induction <> plus_comm prfax
prf 32068:32077 <> in_not_nil
binder 32090:32090 <> A:144
R32097:32097 LF.Logic <> A:144 var
binder 32093:32093 <> x:145
R32105:32108 LF.Poly <> list ind
R32110:32110 LF.Logic <> A:144 var
binder 32101:32101 <> l:146
R32120:32123 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32114:32115 LF.Logic <> In def
R32119:32119 LF.Logic <> l:146 var
R32117:32117 LF.Logic <> x:145 var
R32125:32128 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R32124:32124 LF.Logic <> l:146 var
R32129:32130 LF.Poly <> :::'['_']' not
R32165:32167 Coq.Init.Logic <> not def
prf 32513:32525 <> in_not_nil_42
R32542:32545 LF.Poly <> list ind
R32547:32549 Coq.Init.Datatypes <> nat ind
binder 32538:32538 <> l:147
R32559:32562 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32552:32553 LF.Logic <> In def
R32558:32558 LF.Logic <> l:147 var
R32564:32567 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R32563:32563 LF.Logic <> l:147 var
R32568:32569 LF.Poly <> :::'['_']' not
R32606:32615 LF.Logic <> in_not_nil thm
R32606:32615 LF.Logic <> in_not_nil thm
prf 32706:32724 <> in_not_nil_42_take2
R32741:32744 LF.Poly <> list ind
R32746:32748 Coq.Init.Datatypes <> nat ind
binder 32737:32737 <> l:148
R32758:32761 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32751:32752 LF.Logic <> In def
R32757:32757 LF.Logic <> l:148 var
R32763:32766 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R32762:32762 LF.Logic <> l:148 var
R32767:32768 LF.Poly <> :::'['_']' not
R32800:32809 LF.Logic <> in_not_nil thm
R32800:32809 LF.Logic <> in_not_nil thm
prf 32880:32898 <> in_not_nil_42_take3
R32915:32918 LF.Poly <> list ind
R32920:32922 Coq.Init.Datatypes <> nat ind
binder 32911:32911 <> l:149
R32932:32935 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R32925:32926 LF.Logic <> In def
R32931:32931 LF.Logic <> l:149 var
R32937:32940 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R32936:32936 LF.Logic <> l:149 var
R32941:32942 LF.Poly <> :::'['_']' not
R32974:32983 LF.Logic <> in_not_nil thm
R32974:32983 LF.Logic <> in_not_nil thm
prf 33060:33078 <> in_not_nil_42_take4
R33095:33098 LF.Poly <> list ind
R33100:33102 Coq.Init.Datatypes <> nat ind
binder 33091:33091 <> l:150
R33112:33115 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33105:33106 LF.Logic <> In def
R33111:33111 LF.Logic <> l:150 var
R33117:33120 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R33116:33116 LF.Logic <> l:150 var
R33121:33122 LF.Poly <> :::'['_']' not
R33155:33164 LF.Logic <> in_not_nil thm
R33166:33168 Coq.Init.Datatypes <> nat ind
R33155:33164 LF.Logic <> in_not_nil thm
R33166:33168 Coq.Init.Datatypes <> nat ind
prf 33239:33257 <> in_not_nil_42_take5
R33274:33277 LF.Poly <> list ind
R33279:33281 Coq.Init.Datatypes <> nat ind
binder 33270:33270 <> l:151
R33291:33294 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33284:33285 LF.Logic <> In def
R33290:33290 LF.Logic <> l:151 var
R33296:33299 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R33295:33295 LF.Logic <> l:151 var
R33300:33301 LF.Poly <> :::'['_']' not
R33334:33343 LF.Logic <> in_not_nil thm
R33334:33343 LF.Logic <> in_not_nil thm
def 33813:33832 <> lemma_application_ex
R33850:33852 Coq.Init.Datatypes <> nat ind
binder 33846:33846 <> n:152
R33861:33864 LF.Poly <> list ind
R33866:33868 Coq.Init.Datatypes <> nat ind
binder 33856:33857 <> ns:153
R33906:33913 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R33876:33877 LF.Logic <> In def
R33882:33884 LF.Poly <> map def
R33903:33904 LF.Logic <> ns:153 var
binder 33891:33891 <> m:154
R33897:33899 LF.Basics <> ::nat_scope:x_'*'_x not
R33896:33896 LF.Logic <> m:154 var
R33879:33879 LF.Logic <> n:152 var
R33915:33917 Coq.Init.Logic <> ::type_scope:x_'='_x not
R33914:33914 LF.Logic <> n:152 var
R33957:33961 LF.Logic <> proj1 thm
R33968:33977 LF.Logic <> In_map_iff thm
R33957:33961 LF.Logic <> proj1 thm
R33968:33977 LF.Logic <> In_map_iff thm
R34029:34036 LF.Induction <> mult_0_r prfax
R34029:34036 LF.Induction <> mult_0_r prfax
R34029:34036 LF.Induction <> mult_0_r prfax
def 35736:35756 <> function_equality_ex1
R35762:35762 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35777:35781 Coq.Init.Logic <> ::type_scope:x_'='_x not
R35803:35803 Coq.Init.Logic <> ::type_scope:x_'='_x not
binder 35767:35767 <> x:155
R35773:35775 LF.Basics <> ::nat_scope:x_'+'_x not
R35776:35776 LF.Logic <> x:155 var
binder 35786:35786 <> x:156
R35791:35791 LF.Basics <> ::nat_scope:x_'+'_x not
R35798:35801 LF.Basics <> ::nat_scope:x_'+'_x not
R35792:35795 Coq.Init.Peano <> pred abbrev
R35802:35802 LF.Logic <> x:156 var
def 36490:36510 <> function_equality_ex2
R36516:36516 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36534:36538 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36556:36556 Coq.Init.Logic <> ::type_scope:x_'='_x not
binder 36521:36521 <> x:157
R36526:36529 Coq.Init.Peano <> plus abbrev
R36531:36531 LF.Logic <> x:157 var
binder 36543:36543 <> x:158
R36548:36551 Coq.Init.Peano <> plus abbrev
R36555:36555 LF.Logic <> x:158 var
ax 36706:36730 <> functional_extensionality
binder 36742:36742 <> X:159
binder 36744:36744 <> Y:160
R36797:36800 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36796:36796 LF.Logic <> X:159 var
R36801:36801 LF.Logic <> Y:160 var
binder 36790:36790 <> f:161
binder 36792:36792 <> g:162
R36807:36807 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36831:36835 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R36818:36818 LF.Logic <> X:159 var
binder 36816:36816 <> x:163
R36825:36827 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36822:36822 LF.Logic <> f:161 var
R36824:36824 LF.Logic <> x:163 var
R36828:36828 LF.Logic <> g:162 var
R36830:36830 LF.Logic <> x:163 var
R36837:36839 Coq.Init.Logic <> ::type_scope:x_'='_x not
R36836:36836 LF.Logic <> f:161 var
R36840:36840 LF.Logic <> g:162 var
def 37114:37134 <> function_equality_ex2
R37140:37140 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37158:37162 Coq.Init.Logic <> ::type_scope:x_'='_x not
R37180:37180 Coq.Init.Logic <> ::type_scope:x_'='_x not
binder 37145:37145 <> x:165
R37150:37153 Coq.Init.Peano <> plus abbrev
R37155:37155 LF.Logic <> x:165 var
binder 37167:37167 <> x:166
R37172:37175 Coq.Init.Peano <> plus abbrev
R37179:37179 LF.Logic <> x:166 var
R37198:37222 LF.Logic <> functional_extensionality prfax
R37198:37222 LF.Logic <> functional_extensionality prfax
R37243:37251 LF.Induction <> plus_comm prfax
R37243:37251 LF.Induction <> plus_comm prfax
R37901:37921 LF.Logic <> function_equality_ex2 ex
def 38437:38446 <> rev_append
binder 38449:38449 <> X:167
R38461:38464 LF.Poly <> list ind
R38466:38466 LF.Logic <> X:167 var
binder 38453:38454 <> l1:168
binder 38456:38457 <> l2:169
R38471:38474 LF.Poly <> list ind
R38476:38476 LF.Logic <> X:167 var
R38489:38490 LF.Logic <> l1:168 var
R38501:38502 LF.Poly <> :::'['_']' not
R38507:38508 LF.Logic <> l2:169 var
R38515:38518 LF.Poly <> :::x_'::'_x not
R38526:38535 LF.Logic <> rev_append:170 def
R38543:38546 LF.Poly <> :::x_'::'_x not
R38547:38548 LF.Logic <> l2:169 var
def 38570:38575 <> tr_rev
binder 38578:38578 <> X:172
R38586:38589 LF.Poly <> list ind
R38591:38591 LF.Logic <> X:172 var
binder 38582:38582 <> l:173
R38596:38599 LF.Poly <> list ind
R38601:38601 LF.Logic <> X:172 var
R38608:38617 LF.Logic <> rev_append def
R38621:38622 LF.Poly <> :::'['_']' not
R38619:38619 LF.Logic <> l:173 var
prf 38958:38973 <> rev_append_plus'
binder 38984:38984 <> X:174
R38989:38992 LF.Poly <> list ind
R38994:38994 LF.Logic <> X:174 var
binder 38987:38987 <> l:175
R39002:39005 LF.Poly <> list ind
R39007:39007 LF.Logic <> X:174 var
binder 38998:38999 <> l2:176
R39029:39031 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39014:39023 LF.Logic <> rev_append def
R39027:39028 LF.Logic <> l2:176 var
R39025:39025 LF.Logic <> l:175 var
R39047:39050 LF.Poly <> :::x_'++'_x not
R39032:39041 LF.Logic <> rev_append def
R39045:39046 LF.Poly <> :::'['_']' not
R39043:39043 LF.Logic <> l:175 var
R39051:39052 LF.Logic <> l2:176 var
R39171:39171 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R39174:39174 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R39171:39171 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R39174:39174 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R39171:39171 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R39174:39174 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R39189:39197 LF.Poly <> app_assoc prfax
R39189:39197 LF.Poly <> app_assoc prfax
R39189:39197 LF.Poly <> app_assoc prfax
prf 39228:39242 <> rev_append_plus
binder 39253:39253 <> X:177
R39258:39261 LF.Poly <> list ind
R39263:39263 LF.Logic <> X:177 var
binder 39256:39256 <> l:178
R39270:39270 LF.Logic <> X:177 var
binder 39267:39267 <> x:179
R39293:39295 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39277:39286 LF.Logic <> rev_append def
R39290:39290 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R39292:39292 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R39291:39291 LF.Logic <> x:179 var
R39288:39288 LF.Logic <> l:178 var
R39311:39314 LF.Poly <> :::x_'++'_x not
R39296:39305 LF.Logic <> rev_append def
R39309:39310 LF.Poly <> :::'['_']' not
R39307:39307 LF.Logic <> l:178 var
R39315:39315 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R39317:39317 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R39316:39316 LF.Logic <> x:179 var
R39432:39447 LF.Logic <> rev_append_plus' thm
R39454:39454 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R39457:39458 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R39460:39460 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R39432:39447 LF.Logic <> rev_append_plus' thm
R39454:39454 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R39457:39458 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R39460:39460 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R39432:39447 LF.Logic <> rev_append_plus' thm
R39454:39454 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R39457:39458 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R39460:39460 LF.Poly <> :::'['_x_';'_'..'_';'_x_']' not
R39479:39487 LF.Poly <> app_assoc prfax
R39479:39487 LF.Poly <> app_assoc prfax
R39479:39487 LF.Poly <> app_assoc prfax
prf 39525:39538 <> tr_rev_correct
binder 39549:39549 <> X:180
R39561:39563 Coq.Init.Logic <> ::type_scope:x_'='_x not
R39553:39558 LF.Logic <> tr_rev def
R39560:39560 LF.Logic <> X:180 var
R39565:39567 LF.Poly <> rev def
R39569:39569 LF.Logic <> X:180 var
R39597:39621 LF.Logic <> functional_extensionality prfax
R39597:39621 LF.Logic <> functional_extensionality prfax
R39720:39725 LF.Logic <> tr_rev def
R39741:39755 LF.Logic <> rev_append_plus thm
R39741:39755 LF.Logic <> rev_append_plus thm
def 40169:40180 <> even_42_bool
R40192:40194 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40184:40188 LF.Basics <> evenb def
R40195:40198 LF.Basics <> true constr
def 40290:40301 <> even_42_prop
R40305:40308 LF.Logic <> even def
R40328:40331 LF.Logic <> even def
prf 40590:40601 <> evenb_double
binder 40612:40612 <> k:181
R40631:40633 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40615:40619 LF.Basics <> evenb def
R40622:40627 LF.Induction <> double def
R40629:40629 LF.Logic <> k:181 var
R40634:40637 LF.Basics <> true constr
prf 40796:40812 <> evenb_double_conv
binder 40823:40823 <> n:182
R40826:40832 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R40834:40837 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 40833:40833 <> k:183
R40839:40841 Coq.Init.Logic <> ::type_scope:x_'='_x not
R40838:40838 LF.Logic <> n:182 var
R40845:40849 LF.Basics <> evenb def
R40851:40851 LF.Logic <> n:182 var
R40872:40872 Coq.Init.Datatypes <> S constr
R40875:40880 LF.Induction <> double def
R40882:40882 LF.Logic <> k:183 var
R40858:40863 LF.Induction <> double def
R40865:40865 LF.Logic <> k:183 var
R41110:41114 LF.Basics <> evenb def
R41117:41117 Coq.Init.Datatypes <> S constr
R41110:41114 LF.Basics <> evenb def
R41117:41117 Coq.Init.Datatypes <> S constr
R41146:41152 LF.Induction <> evenb_S prfax
R41146:41152 LF.Induction <> evenb_S prfax
R41146:41152 LF.Induction <> evenb_S prfax
R41187:41189 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41179:41183 LF.Basics <> evenb def
R41190:41194 LF.Basics <> false constr
R41187:41189 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41179:41183 LF.Basics <> evenb def
R41190:41194 LF.Basics <> false constr
R41217:41221 LF.Basics <> evenb def
R41217:41221 LF.Basics <> evenb def
R41354:41354 Coq.Init.Datatypes <> S constr
R41354:41354 Coq.Init.Datatypes <> S constr
R41409:41415 LF.Induction <> evenb_S prfax
R41409:41415 LF.Induction <> evenb_S prfax
R41409:41415 LF.Induction <> evenb_S prfax
R41449:41451 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41441:41445 LF.Basics <> evenb def
R41452:41455 LF.Basics <> true constr
R41449:41451 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41441:41445 LF.Basics <> evenb def
R41452:41455 LF.Basics <> true constr
R41476:41480 LF.Basics <> evenb def
R41476:41480 LF.Basics <> evenb def
prf 41674:41687 <> even_bool_prop
binder 41698:41698 <> n:184
R41717:41721 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R41710:41712 Coq.Init.Logic <> ::type_scope:x_'='_x not
R41703:41707 LF.Basics <> evenb def
R41709:41709 LF.Logic <> n:184 var
R41713:41716 LF.Basics <> true constr
R41722:41725 LF.Logic <> even def
R41727:41727 LF.Logic <> n:184 var
R41780:41796 LF.Logic <> evenb_double_conv thm
R41780:41796 LF.Logic <> evenb_double_conv thm
R41899:41910 LF.Logic <> evenb_double thm
R41899:41910 LF.Logic <> evenb_double thm
prf 42246:42251 <> eqb_eq
R42270:42272 Coq.Init.Datatypes <> nat ind
binder 42262:42263 <> n1:185
binder 42265:42266 <> n2:186
R42292:42296 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R42285:42287 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42279:42282 LF.Basics <> ::nat_scope:x_'=?'_x not
R42277:42278 LF.Logic <> n1:185 var
R42283:42284 LF.Logic <> n2:186 var
R42288:42291 LF.Basics <> true constr
R42299:42301 Coq.Init.Logic <> ::type_scope:x_'='_x not
R42297:42298 LF.Logic <> n1:185 var
R42302:42303 LF.Logic <> n2:186 var
R42346:42353 LF.Tactics <> eqb_true thm
R42346:42353 LF.Tactics <> eqb_true thm
R42392:42399 LF.Induction <> eqb_refl prfax
R42392:42399 LF.Induction <> eqb_refl prfax
R42392:42399 LF.Induction <> eqb_refl prfax
def 43201:43213 <> is_even_prime
binder 43215:43215 <> n:187
R43226:43228 Coq.Init.Logic <> ::type_scope:x_'='_x not
R43225:43225 LF.Logic <> n:187 var
R43248:43252 LF.Basics <> false constr
R43236:43239 LF.Basics <> true constr
def 44696:44704 <> even_1000
R44708:44711 LF.Logic <> even def
R44820:44823 LF.Logic <> even def
def 45020:45029 <> even_1000'
R45043:45045 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45033:45037 LF.Basics <> evenb def
R45046:45049 LF.Basics <> true constr
def 45236:45246 <> even_1000''
R45250:45253 LF.Logic <> even def
R45274:45287 LF.Logic <> even_bool_prop thm
R45274:45287 LF.Logic <> even_bool_prop thm
def 45779:45791 <> not_even_1001
R45805:45807 Coq.Init.Logic <> ::type_scope:x_'='_x not
R45795:45799 LF.Basics <> evenb def
R45808:45812 LF.Basics <> false constr
def 45944:45957 <> not_even_1001'
R45961:45962 Coq.Init.Logic <> ::type_scope:'~'_x not
R45972:45972 Coq.Init.Logic <> ::type_scope:'~'_x not
R45963:45966 LF.Logic <> even def
R46019:46032 LF.Logic <> even_bool_prop thm
R46019:46032 LF.Logic <> even_bool_prop thm
R46019:46032 LF.Logic <> even_bool_prop thm
R46044:46046 Coq.Init.Logic <> not def
prf 46417:46432 <> plus_eqb_example
R46451:46453 Coq.Init.Datatypes <> nat ind
binder 46443:46443 <> n:188
binder 46445:46445 <> m:189
binder 46447:46447 <> p:190
R46473:46476 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R46466:46468 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46461:46464 LF.Basics <> ::nat_scope:x_'=?'_x not
R46460:46460 LF.Logic <> n:188 var
R46465:46465 LF.Logic <> m:189 var
R46469:46472 LF.Basics <> true constr
R46491:46493 Coq.Init.Logic <> ::type_scope:x_'='_x not
R46482:46485 LF.Basics <> ::nat_scope:x_'=?'_x not
R46478:46480 LF.Basics <> ::nat_scope:x_'+'_x not
R46477:46477 LF.Logic <> n:188 var
R46481:46481 LF.Logic <> p:190 var
R46487:46489 LF.Basics <> ::nat_scope:x_'+'_x not
R46486:46486 LF.Logic <> m:189 var
R46490:46490 LF.Logic <> p:190 var
R46494:46497 LF.Basics <> true constr
R46561:46566 LF.Logic <> eqb_eq thm
R46561:46566 LF.Logic <> eqb_eq thm
R46561:46566 LF.Logic <> eqb_eq thm
R46597:46602 LF.Logic <> eqb_eq thm
R46597:46602 LF.Logic <> eqb_eq thm
R46597:46602 LF.Logic <> eqb_eq thm
prf 47046:47058 <> andb_true_iff
R47075:47078 LF.Basics <> bool ind
binder 47069:47070 <> b1:191
binder 47072:47073 <> b2:192
R47098:47102 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R47091:47093 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47085:47088 LF.Basics <> :::x_'&&'_x not
R47083:47084 LF.Logic <> b1:191 var
R47089:47090 LF.Logic <> b2:192 var
R47094:47097 LF.Basics <> true constr
R47112:47115 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R47105:47107 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47103:47104 LF.Logic <> b1:191 var
R47108:47111 LF.Basics <> true constr
R47118:47120 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47116:47117 LF.Logic <> b2:192 var
R47121:47124 LF.Basics <> true constr
prf 47352:47363 <> orb_true_iff
binder 47374:47375 <> b1:193
binder 47377:47378 <> b2:194
R47398:47402 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R47391:47393 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47385:47388 LF.Basics <> :::x_'||'_x not
R47383:47384 LF.Logic <> b1:193 var
R47389:47390 LF.Logic <> b2:194 var
R47394:47397 LF.Basics <> true constr
R47412:47415 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R47405:47407 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47403:47404 LF.Logic <> b1:193 var
R47408:47411 LF.Basics <> true constr
R47418:47420 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47416:47417 LF.Logic <> b2:194 var
R47421:47424 LF.Basics <> true constr
prf 47914:47920 <> eqb_neq
R47937:47939 Coq.Init.Datatypes <> nat ind
binder 47931:47931 <> x:195
binder 47933:47933 <> y:196
R47958:47962 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R47950:47952 Coq.Init.Logic <> ::type_scope:x_'='_x not
R47945:47948 LF.Basics <> ::nat_scope:x_'=?'_x not
R47944:47944 LF.Logic <> x:195 var
R47949:47949 LF.Logic <> y:196 var
R47953:47957 LF.Basics <> false constr
R47964:47967 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R47963:47963 LF.Logic <> x:195 var
R47968:47968 LF.Logic <> y:196 var
R48020:48022 Coq.Init.Logic <> not def
R48069:48076 LF.Induction <> eqb_refl prfax
R48069:48076 LF.Induction <> eqb_refl prfax
R48069:48076 LF.Induction <> eqb_refl prfax
R48111:48113 Coq.Init.Logic <> not def
R48137:48140 LF.Basics <> ::nat_scope:x_'=?'_x not
R48137:48140 LF.Basics <> ::nat_scope:x_'=?'_x not
R48165:48172 LF.Tactics <> eqb_true thm
R48165:48172 LF.Tactics <> eqb_true thm
def 48626:48633 <> eqb_list
binder 48636:48636 <> A:197
R48654:48657 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48653:48653 LF.Logic <> A:197 var
R48659:48662 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R48658:48658 LF.Logic <> A:197 var
R48663:48666 LF.Basics <> bool ind
binder 48647:48649 <> eqb:198
R48696:48699 LF.Poly <> list ind
R48701:48701 LF.Logic <> A:197 var
binder 48688:48689 <> l1:199
binder 48691:48692 <> l2:200
R48706:48709 LF.Basics <> bool ind
R48722:48723 LF.Logic <> l1:199 var
R48734:48735 LF.Poly <> :::'['_']' not
R48746:48747 LF.Logic <> l2:200 var
R48766:48767 LF.Poly <> :::'['_']' not
R48772:48775 LF.Basics <> true constr
R48790:48793 LF.Poly <> :::x_'::'_x not
R48801:48805 LF.Basics <> false constr
R48826:48829 LF.Poly <> :::x_'::'_x not
R48842:48843 LF.Logic <> l2:200 var
R48867:48868 LF.Poly <> :::'['_']' not
R48873:48877 LF.Basics <> false constr
R48897:48900 LF.Poly <> :::x_'::'_x not
R48911:48913 LF.Logic <> eqb:198 var
R48949:48953 LF.Basics <> false constr
R48924:48931 LF.Logic <> eqb_list:201 def
R48933:48935 LF.Logic <> eqb:198 var
prf 48988:49004 <> eqb_list_true_iff
binder 49017:49017 <> A:205
R49027:49030 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49026:49026 LF.Logic <> A:205 var
R49032:49035 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49031:49031 LF.Logic <> A:205 var
R49036:49039 LF.Basics <> bool ind
binder 49020:49022 <> eqb:206
R49047:49047 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R49090:49098 Coq.Init.Logic <> ::type_scope:x_'->'_x not
binder 49055:49056 <> a1:207
binder 49058:49059 <> a2:208
R49078:49082 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R49071:49073 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49062:49064 LF.Logic <> eqb:206 var
R49069:49070 LF.Logic <> a2:208 var
R49066:49067 LF.Logic <> a1:207 var
R49074:49077 LF.Basics <> true constr
R49085:49087 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49083:49084 LF.Logic <> a1:207 var
R49088:49089 LF.Logic <> a2:208 var
binder 49106:49107 <> l1:209
binder 49109:49110 <> l2:210
R49138:49142 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R49131:49133 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49113:49120 LF.Logic <> eqb_list def
R49129:49130 LF.Logic <> l2:210 var
R49126:49127 LF.Logic <> l1:209 var
R49122:49124 LF.Logic <> eqb:206 var
R49134:49137 LF.Basics <> true constr
R49145:49147 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49143:49144 LF.Logic <> l1:209 var
R49148:49149 LF.Logic <> l2:210 var
R49830:49832 Coq.Init.Logic <> ::type_scope:x_'='_x not
R49830:49832 Coq.Init.Logic <> ::type_scope:x_'='_x not
def 50185:50191 <> forallb
binder 50194:50194 <> X:211
R50213:50216 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R50212:50212 LF.Logic <> X:211 var
R50217:50220 LF.Basics <> bool ind
binder 50205:50208 <> test:212
R50228:50231 LF.Poly <> list ind
R50233:50233 LF.Logic <> X:211 var
binder 50224:50224 <> l:213
R50238:50241 LF.Basics <> bool ind
R50254:50254 LF.Logic <> l:213 var
R50265:50266 LF.Poly <> :::'['_']' not
R50271:50274 LF.Basics <> true constr
R50281:50284 LF.Poly <> :::x_'::'_x not
R50291:50294 LF.Basics <> andb def
R50297:50300 LF.Logic <> test:212 var
R50306:50312 LF.Logic <> forallb:214 def
R50314:50317 LF.Logic <> test:212 var
prf 50444:50459 <> forallb_true_iff
binder 50470:50470 <> X:216
binder 50472:50475 <> test:217
R50482:50485 LF.Poly <> list ind
R50487:50487 LF.Logic <> X:216 var
binder 50478:50478 <> l:218
R50515:50519 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R50508:50510 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50494:50500 LF.Logic <> forallb def
R50507:50507 LF.Logic <> l:218 var
R50502:50505 LF.Logic <> test:217 var
R50511:50514 LF.Basics <> true constr
R50520:50522 LF.Logic <> All def
R50549:50549 LF.Logic <> l:218 var
binder 50529:50529 <> x:219
R50540:50542 Coq.Init.Logic <> ::type_scope:x_'='_x not
R50534:50537 LF.Logic <> test:217 var
R50539:50539 LF.Logic <> x:219 var
R50543:50546 LF.Basics <> true constr
R50658:50670 LF.Logic <> andb_true_iff thm
R50658:50670 LF.Logic <> andb_true_iff thm
R50658:50670 LF.Logic <> andb_true_iff thm
R50845:50857 LF.Logic <> andb_true_iff thm
R50845:50857 LF.Logic <> andb_true_iff thm
R50845:50857 LF.Logic <> andb_true_iff thm
def 51450:51464 <> excluded_middle
binder 51476:51476 <> P:220
R51489:51492 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R51488:51488 LF.Logic <> P:220 var
R51493:51494 Coq.Init.Logic <> ::type_scope:'~'_x not
R51495:51495 LF.Logic <> P:220 var
prf 52169:52194 <> restricted_excluded_middle
binder 52205:52205 <> P:221
binder 52207:52207 <> b:222
R52212:52212 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52227:52231 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R52214:52218 Coq.Init.Logic <> ::type_scope:x_'<->'_x not
R52213:52213 LF.Logic <> P:221 var
R52220:52222 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52219:52219 LF.Logic <> b:222 var
R52223:52226 LF.Basics <> true constr
R52233:52236 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R52232:52232 LF.Logic <> P:221 var
R52237:52238 Coq.Init.Logic <> ::type_scope:'~'_x not
R52239:52239 LF.Logic <> P:221 var
prf 52469:52497 <> restricted_excluded_middle_eq
R52515:52517 Coq.Init.Datatypes <> nat ind
binder 52509:52509 <> n:223
binder 52511:52511 <> m:224
R52528:52531 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R52524:52526 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52523:52523 LF.Logic <> n:223 var
R52527:52527 LF.Logic <> m:224 var
R52533:52536 Coq.Init.Logic <> ::type_scope:x_'<>'_x not
R52532:52532 LF.Logic <> n:223 var
R52537:52537 LF.Logic <> m:224 var
R52570:52595 LF.Logic <> restricted_excluded_middle thm
R52599:52601 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52607:52610 LF.Basics <> ::nat_scope:x_'=?'_x not
R52570:52595 LF.Logic <> restricted_excluded_middle thm
R52599:52601 Coq.Init.Logic <> ::type_scope:x_'='_x not
R52607:52610 LF.Basics <> ::nat_scope:x_'=?'_x not
R52636:52641 LF.Logic <> eqb_eq thm
R52636:52641 LF.Logic <> eqb_eq thm
prf 56305:56331 <> excluded_middle_irrefutable
binder 56342:56342 <> P:225
R56353:56354 Coq.Init.Logic <> ::type_scope:'~'_x not
R56355:56357 Coq.Init.Logic <> ::type_scope:'~'_x not
R56366:56366 Coq.Init.Logic <> ::type_scope:'~'_x not
R56359:56362 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R56358:56358 LF.Logic <> P:225 var
R56363:56364 Coq.Init.Logic <> ::type_scope:'~'_x not
R56365:56365 LF.Logic <> P:225 var
R56395:56397 Coq.Init.Logic <> not def
R56425:56428 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56429:56433 Coq.Init.Logic <> False ind
R56425:56428 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56429:56433 Coq.Init.Logic <> False ind
R56467:56471 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R56482:56482 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R56473:56476 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56477:56481 Coq.Init.Logic <> False ind
R56467:56471 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R56482:56482 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R56473:56476 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56477:56481 Coq.Init.Logic <> False ind
R56551:56555 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R56566:56566 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R56557:56560 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56561:56565 Coq.Init.Logic <> False ind
R56551:56555 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R56566:56566 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R56557:56560 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R56561:56565 Coq.Init.Logic <> False ind
prf 57036:57050 <> not_exists_dist
R57071:57076 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57056:57070 LF.Logic <> excluded_middle def
binder 57085:57085 <> X:226
R57099:57102 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57098:57098 LF.Logic <> X:226 var
binder 57094:57094 <> P:227
R57133:57137 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57151:57151 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R57114:57116 Coq.Init.Logic <> ::type_scope:'~'_x not
R57132:57132 Coq.Init.Logic <> ::type_scope:'~'_x not
R57117:57123 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
R57125:57126 Coq.Init.Logic <> ::type_scope:'exists'_x_'..'_x_','_x not
binder 57124:57124 <> x:228
R57127:57128 Coq.Init.Logic <> ::type_scope:'~'_x not
R57129:57129 LF.Logic <> P:227 var
R57131:57131 LF.Logic <> x:228 var
binder 57145:57145 <> x:229
R57148:57148 LF.Logic <> P:227 var
R57150:57150 LF.Logic <> x:229 var
R57170:57184 LF.Logic <> excluded_middle def
def 58034:58039 <> peirce
binder 58051:58051 <> P:230
binder 58053:58053 <> Q:231
R58064:58064 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58074:58076 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58065:58065 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58070:58072 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58067:58068 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58066:58066 LF.Logic <> P:230 var
R58069:58069 LF.Logic <> Q:231 var
R58073:58073 LF.Logic <> P:230 var
R58077:58077 LF.Logic <> P:230 var
def 58092:58118 <> double_negation_elimination
binder 58130:58130 <> P:232
R58143:58146 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58140:58140 Coq.Init.Logic <> ::type_scope:'~'_x not
R58141:58141 Coq.Init.Logic <> ::type_scope:'~'_x not
R58142:58142 LF.Logic <> P:232 var
R58147:58147 LF.Logic <> P:232 var
def 58162:58182 <> de_morgan_not_and_not
binder 58194:58194 <> P:233
binder 58196:58196 <> Q:234
R58217:58220 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58206:58207 Coq.Init.Logic <> ::type_scope:'~'_x not
R58216:58216 Coq.Init.Logic <> ::type_scope:'~'_x not
R58210:58213 Coq.Init.Logic <> ::type_scope:x_'/\'_x not
R58208:58208 Coq.Init.Logic <> ::type_scope:'~'_x not
R58209:58209 LF.Logic <> P:233 var
R58214:58214 Coq.Init.Logic <> ::type_scope:'~'_x not
R58215:58215 LF.Logic <> Q:234 var
R58222:58223 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R58221:58221 LF.Logic <> P:233 var
R58224:58224 LF.Logic <> Q:234 var
def 58239:58251 <> implies_to_or
binder 58263:58263 <> P:235
binder 58265:58265 <> Q:236
R58275:58275 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58280:58285 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58291:58291 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58277:58278 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58276:58276 LF.Logic <> P:235 var
R58279:58279 LF.Logic <> Q:236 var
R58288:58289 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R58286:58286 Coq.Init.Logic <> ::type_scope:'~'_x not
R58287:58287 LF.Logic <> P:235 var
R58290:58290 LF.Logic <> Q:236 var
prf 58306:58323 <> pierce_implies_dne
R58335:58338 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58329:58334 LF.Logic <> peirce def
R58339:58365 LF.Logic <> double_negation_elimination def
R58385:58390 LF.Logic <> peirce def
R58400:58426 LF.Logic <> double_negation_elimination def
R58458:58460 Coq.Init.Logic <> not def
R58487:58491 Coq.Init.Logic <> False ind
R58487:58491 Coq.Init.Logic <> False ind
prf 58558:58571 <> dne_implies_em
R58604:58607 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58577:58603 LF.Logic <> double_negation_elimination def
R58608:58622 LF.Logic <> excluded_middle def
R58641:58667 LF.Logic <> double_negation_elimination def
R58677:58691 LF.Logic <> excluded_middle def
R58729:58729 Coq.Init.Logic <> ::type_scope:'~'_x not
R58730:58731 Coq.Init.Logic <> ::type_scope:'~'_x not
R58739:58739 Coq.Init.Logic <> ::type_scope:'~'_x not
R58733:58736 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R58737:58737 Coq.Init.Logic <> ::type_scope:'~'_x not
R58729:58729 Coq.Init.Logic <> ::type_scope:'~'_x not
R58730:58731 Coq.Init.Logic <> ::type_scope:'~'_x not
R58739:58739 Coq.Init.Logic <> ::type_scope:'~'_x not
R58733:58736 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R58737:58737 Coq.Init.Logic <> ::type_scope:'~'_x not
R58752:58778 LF.Logic <> excluded_middle_irrefutable thm
R58752:58778 LF.Logic <> excluded_middle_irrefutable thm
R58798:58801 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R58802:58802 Coq.Init.Logic <> ::type_scope:'~'_x not
R58798:58801 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R58802:58802 Coq.Init.Logic <> ::type_scope:'~'_x not
prf 58831:58844 <> em_implies_ito
R58865:58868 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R58850:58864 LF.Logic <> excluded_middle def
R58869:58881 LF.Logic <> implies_to_or def
R58901:58915 LF.Logic <> excluded_middle def
R58925:58937 LF.Logic <> implies_to_or def
R58989:58992 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R58993:58993 Coq.Init.Logic <> ::type_scope:'~'_x not
R58989:58992 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R58993:58993 Coq.Init.Logic <> ::type_scope:'~'_x not
prf 59091:59104 <> em_implies_dne
R59122:59125 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59107:59121 LF.Logic <> excluded_middle def
R59126:59152 LF.Logic <> double_negation_elimination def
prf 59297:59310 <> ito_implies_em
R59329:59332 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59316:59328 LF.Logic <> implies_to_or def
R59333:59347 LF.Logic <> excluded_middle def
prf 59468:59484 <> ito_implies_dmnan
R59503:59506 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59490:59502 LF.Logic <> implies_to_or def
R59507:59527 LF.Logic <> de_morgan_not_and_not def
R59565:59591 LF.Logic <> double_negation_elimination def
R59565:59591 LF.Logic <> double_negation_elimination def
R59606:59619 LF.Logic <> em_implies_dne thm
R59606:59619 LF.Logic <> em_implies_dne thm
R59628:59641 LF.Logic <> ito_implies_em thm
R59628:59641 LF.Logic <> ito_implies_em thm
R59696:59699 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59688:59688 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R59692:59694 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R59689:59689 Coq.Init.Logic <> ::type_scope:'~'_x not
R59690:59690 Coq.Init.Logic <> ::type_scope:'~'_x not
R59701:59702 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R59696:59699 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59688:59688 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R59692:59694 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R59689:59689 Coq.Init.Logic <> ::type_scope:'~'_x not
R59690:59690 Coq.Init.Logic <> ::type_scope:'~'_x not
R59701:59702 Coq.Init.Logic <> ::type_scope:x_'\/'_x not
R59819:59819 Coq.Init.Logic <> ::type_scope:'~'_x not
R59819:59819 Coq.Init.Logic <> ::type_scope:'~'_x not
prf 59925:59940 <> dmnan_implies_em
R59967:59970 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R59946:59966 LF.Logic <> de_morgan_not_and_not def
R59971:59985 LF.Logic <> excluded_middle def
R60035:60035 Coq.Init.Logic <> ::type_scope:'~'_x not
R60035:60035 Coq.Init.Logic <> ::type_scope:'~'_x not
prf 60114:60131 <> dne_implies_pierce
R60164:60167 Coq.Init.Logic <> ::type_scope:x_'->'_x not
R60137:60163 LF.Logic <> double_negation_elimination def
R60168:60173 LF.Logic <> peirce def
R60229:60231 Coq.Init.Logic <> not def
